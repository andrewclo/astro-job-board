---
interface Props {
  title: string;
  company: string;
  companyId: string;
  category: string;
  type: string;
  locations: string[];
  description: string;
  salary?: {
    min: number;
    max: number;
    currency: string;
  };
  postedAt: string;
}

const { title, company, companyId, category, type, locations, description, salary, postedAt } = Astro.props;
---

<article class="bg-white p-6 border-3 border-black hover:border-accent transition-colors">
  <div class="flex justify-between items-start mb-4">
    <div>
      <h2 class="text-xl font-bold mb-2">{title}</h2>
      <a href={`/companies/${companyId}`} class="text-lg text-gray-700 hover:text-accent">
        {company}
      </a>
    </div>
    <div class="text-sm text-gray-500">
      {new Date(postedAt).toLocaleDateString()}
    </div>
  </div>

  <div class="flex flex-wrap gap-2 mb-4">
    <span class="px-3 py-1 bg-gray-100 text-sm font-mono">{category}</span>
    <span class="px-3 py-1 bg-gray-100 text-sm font-mono">{type}</span>
    {locations.map(location => (
      <span class="px-3 py-1 bg-gray-100 text-sm font-mono">{location}</span>
    ))}
  </div>

  <p class="text-gray-700 mb-4">{description}</p>

  {salary && (
    <div class="text-sm text-gray-600 mb-4">
      {salary.min.toLocaleString()} - {salary.max.toLocaleString()} {salary.currency}
    </div>
  )}

  <a
    href={`/jobs/${title.toLowerCase().replace(/\s+/g, '-')}`}
    class="inline-block px-6 py-2 bg-black text-white hover:bg-accent transition-colors"
  >
    View Details
  </a>
</article> 